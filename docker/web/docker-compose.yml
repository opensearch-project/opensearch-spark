services:
  spark:
    build:
      context: ../..
      dockerfile: docker/web/Dockerfile
      target: spark
    ports:
      - "${MASTER_UI_PORT:-8080}:8080"
      - "${MASTER_PORT:-7077}:7077"
      - "${UI_PORT:-4040}:4040"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_PUBLIC_DNS=localhost
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 30s
      start_interval: 5s

  spark-worker:
    build:
      context: ../..
      dockerfile: docker/web/Dockerfile
      target: spark
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=${WORKER_MEMORY:-1G}
      - SPARK_WORKER_CORES=${WORKER_CORES:-1}
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_PUBLIC_DNS=localhost

  api:
    build:
      context: ../..
      dockerfile: docker/web/Dockerfile
      target: web
    ports:
      - "${FLASK_PORT:-5000}::5000"
    depends_on:
      spark:
        condition: service_healthy
